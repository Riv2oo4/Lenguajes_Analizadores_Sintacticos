(* Lexer para Gramática No. 3 - Variación expresiones aritméticas simples *)

(* Introducir cualquier header aqui *)

let delim = [' ''\t''\n']
let ws = delim+
let digit = ["0123456789"]
let letter = ['A'-'Z''a'-'z']
let digits = digit+
let id = letter(letter|digit)*
let number = digits('.'digits)?('E'['+''-']?digits)?

rule tokens = 
    ws        { return WHITESPACE }  
  |  id        { return ID }               (* Cambie por una acción válida, que devuelva el token *)            
  | number    { return NUMBER }
  | '+'       { return PLUS }
  | '*'       { return TIMES }
  | '('       { return LPAREN }
  | ')'       { return RPAREN }
  | ';'       { return SEMICOLON }
  | ':='     { return ASSIGNOP }

(* Introducir cualquier trailer aqui *)